{
  "name": "Multi-Platform AI Orchestration Environment",
  "dockerFile": "../Dockerfile",
  "context": "..",
  "build": {
    "dockerfile": "../Dockerfile",
    "context": "..",
    "args": {
      "VARIANT": "3.11-bullseye"
    }
  },
  "runArgs": [
    "--gpus=all",
    "--memory=32g",
    "--cpus=8",
    "--shm-size=2g"
  ],
  "features": {
    "ghcr.io/devcontainers/features/github-cli:1": {},
    "ghcr.io/devcontainers/features/docker-in-docker:2": {},
    "ghcr.io/devcontainers/features/node:1": {
      "version": "lts"
    },
    "ghcr.io/devcontainers/features/python:1": {
      "version": "3.11"
    }
  },
  "customizations": {
    "vscode": {
      "extensions": [
        "ms-python.python",
        "ms-python.pylint",
        "ms-python.black-formatter",
        "ms-python.flake8",
        "ms-vscode.vscode-typescript-next",
        "GitHub.copilot",
        "GitHub.copilot-chat",
        "ms-vscode.makefile-tools",
        "redhat.vscode-yaml",
        "ms-vscode.vscode-json",
        "ms-toolsai.jupyter",
        "ms-toolsai.vscode-jupyter-cell-tags",
        "bradlc.vscode-tailwindcss",
        "esbenp.prettier-vscode"
      ],
      "settings": {
        "python.defaultInterpreterPath": "/opt/conda/bin/python",
        "python.linting.enabled": true,
        "python.linting.pylintEnabled": true,
        "python.formatting.provider": "black",
        "python.testing.pytestEnabled": true,
        "python.testing.unittestEnabled": false,
        "python.testing.pytestArgs": [
          "tests"
        ],
        "github.copilot.enable": {
          "*": true,
          "yaml": true,
          "plaintext": true,
          "markdown": true,
          "json": true
        },
        "github.copilot.advanced": {
          "debug.useNodeDebugger": true,
          "debug.testAdapterDebugMode": true
        },
        "files.watcherExclude": {
          "**/node_modules/**": true,
          "**/.git/**": true,
          "**/dist/**": true,
          "**/build/**": true,
          "**/__pycache__/**": true,
          "**/.pytest_cache/**": true
        }
      }
    }
  },
  "forwardPorts": [
    8000,
    8080,
    3000,
    5000,
    8888,
    6006
  ],
  "portsAttributes": {
    "8000": {
      "label": "API Server",
      "onAutoForward": "notify"
    },
    "8080": {
      "label": "Web Interface",
      "onAutoForward": "openBrowser"
    },
    "3000": {
      "label": "Frontend Dev Server",
      "onAutoForward": "openBrowser"
    },
    "5000": {
      "label": "Flask App",
      "onAutoForward": "notify"
    },
    "8888": {
      "label": "Jupyter Lab",
      "onAutoForward": "openBrowser"
    },
    "6006": {
      "label": "TensorBoard",
      "onAutoForward": "openBrowser"
    }
  },
  "postCreateCommand": "bash .devcontainer/post-create.sh",
  "postStartCommand": "bash .devcontainer/post-start.sh",
  "remoteUser": "vscode",
  "containerEnv": {
    "NVIDIA_VISIBLE_DEVICES": "all",
    "NVIDIA_DRIVER_CAPABILITIES": "compute,utility",
    "CUDA_VISIBLE_DEVICES": "all",
    "PYTHONPATH": "/workspace/src",
    "NODE_ENV": "development",
    "AI_ORCHESTRATION_ENV": "development",
    "GITHUB_CODESPACE": "true"
  },
  "mounts": [
    "source=/var/run/docker.sock,target=/var/run/docker-host.sock,type=bind",
    "source=${localWorkspaceFolder}/.devcontainer/cache,target=/workspace/.cache,type=bind,consistency=cached"
  ],
  "workspaceMount": "source=${localWorkspaceFolder},target=/workspace,type=bind,consistency=cached",
  "workspaceFolder": "/workspace"
}